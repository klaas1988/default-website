<?php
/**
 * Functions to handle sidebars
 *
 * WARNING: This file is part of the core PrimaThemes framework.
 * DO NOT edit this file under any circumstances. 
 *
 * @category   PrimaThemes
 * @package    Framework
 * @subpackage Functions
 * @author     PrimaThemes
 * @link       http://www.primathemes.com
 */

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

/**
 * Define sidebars global variable.
 *
 * @since PrimaThemes 2.0
 */
global $prima_registered_sidebar_areas;
$prima_registered_sidebar_areas = array();

/**
 * Register new sidebar area.
 *
 * @since PrimaThemes 2.0
 */
function prima_register_sidebar_area( $args = array() ) {
	global $prima_registered_sidebar_areas;
	if ( !is_array($prima_registered_sidebar_areas) )
		$prima_registered_sidebar_areas = array();
	$i = count($prima_registered_sidebar_areas) + 1;
	$defaults = array(
		'id' => '', 
		'label' => ''
	);
	$sidebar = wp_parse_args($args, $defaults);
	if ( strpos($sidebar['id'], 'sidebar') === false) {
		$sidebar['id'] = 'sidebar'.$sidebar['id'];
	}
	$id = $sidebar['id'];
	$prima_registered_sidebar_areas[$id] = $sidebar;
	return $id;
}

/**
 * Register new sidebar.
 *
 * @since PrimaThemes 2.0
 */
function prima_sidebar( $sidebarid ) {
	global $prima_registered_layouts;
	$layout = prima_get_layout();
	if ( !$layout ) return;
	if ( isset( $prima_registered_layouts[$layout][$sidebarid] ) && $prima_registered_layouts[$layout][$sidebarid] ) {
		$sidebarid = str_replace( 'sidebar', '', $sidebarid );
		get_sidebar( $sidebarid );
	}
}

/**
 * Register all custom sidebars.
 *
 * @since PrimaThemes 2.0
 */
add_action('init', 'prima_register_generated_sidebars', 15);
function prima_register_generated_sidebars() {
	$_sidebars = stripslashes_deep( get_option( PRIMA_SIDEBAR_SETTINGS ) );
	if ( !$_sidebars ) return;
	foreach ( (array)$_sidebars as $id => $info ) {
		if ( $id != '0' ) {
			register_sidebar(array(
				'name' => esc_html( $info['name'] ),
				'id' => $id,
				'description' => esc_html( $info['description'] ),
				'editable' => 1,
				'before_widget' => '<div id="%1$s" class="widget widget-container widget-sidebar %2$s group">',
				'after_widget' => '</div>',
				'before_title' => '<h3 class="widget-title">',
				'after_title' => '</h3>',
			));
		}
	}
}

/**
 * Return current sidebar.
 *
 * @since PrimaThemes 2.0
 */
function prima_get_sidebar( $sidebarid ) {
	if ( !current_theme_supports('prima-sidebar-settings') ) return $default;
	global $prima_sidebar;
	if ( isset( $prima_sidebar[$sidebarid] ) && $prima_sidebar[$sidebarid] )
		return $prima_sidebar[$sidebarid];
	else
		return $sidebarid;
}

/**
 * Define current sidebar at get_header hook.
 *
 * @since PrimaThemes 2.0
 */
add_action( 'get_header', 'prima_get_sidebar_init', 5 );
function prima_get_sidebar_init() {
	if ( !current_theme_supports('prima-sidebar-settings') ) return $default;
	global $wp_query, $wp_registered_sidebars, $prima_registered_sidebar_areas, $prima_sidebar;
	if ( empty( $prima_registered_sidebar_areas ) ) return;
	
	$prima_registered_sidebars = $wp_registered_sidebars;
	foreach ( $prima_registered_sidebar_areas as $sidebar_area ) {
		$id = $sidebar_area['id'];
		$prima_sidebar[$id] = $id;
		if ( is_front_page() && get_option('show_on_front') == 'page' && get_option('page_on_front') > 0 ) {
			$sidebar_inpost = prima_get_post_meta( "_prima_{$id}", get_option('page_on_front') );
			if ( $sidebar_inpost && isset($prima_registered_sidebars[$sidebar_inpost]) ) {
				$prima_sidebar[$id] = $sidebar_inpost;
			}
		}
		elseif ( is_home() && get_option('show_on_front') == 'page' && get_option('page_for_posts') > 0 ) {
			$sidebar_inpost = prima_get_post_meta( "_prima_{$id}", get_option('page_for_posts') );
			if ( $sidebar_inpost && isset($prima_registered_sidebars[$sidebar_inpost]) ) {
				$prima_sidebar[$id] = $sidebar_inpost;
			}
		}
		elseif ( is_singular() ) {
			$postid = $wp_query->post->ID;
			$posttype = $wp_query->post->post_type;
			$sidebar_post = prima_get_setting( "{$id}_{$posttype}" );
			if ( $sidebar_post && isset($prima_registered_sidebars[$sidebar_post]) ) {
				$prima_sidebar[$id] = $sidebar_post;
			}
			$sidebar_inpost = prima_get_post_meta( "_prima_{$id}", $postid );
			if ( $sidebar_inpost && isset($prima_registered_sidebars[$sidebar_inpost]) ) {
				$prima_sidebar[$id] = $sidebar_inpost;
			}
		}
	}
}

/**
 * Echo dynamic sidebar content.
 *
 * @since PrimaThemes 2.0
 */
function prima_dynamic_sidebar( $sidebarid ) {
	$sidebar = prima_get_sidebar( $sidebarid );
	if ( $sidebar ) dynamic_sidebar( $sidebar );
}

/**
 * Echo dynamic sidebar name.
 *
 * @since PrimaThemes 2.0
 */
function prima_dynamic_sidebar_name( $sidebarid ) {
	global $wp_registered_sidebars;
	$sidebar = prima_get_sidebar( $sidebarid );
	if ( !$sidebar ) return false;
	if ( !isset($wp_registered_sidebars[$sidebar]) ) return false;	
	return $wp_registered_sidebars[$sidebar]['name'];
}

/**
 * Return sidebars list in array format.
 *
 * @since PrimaThemes 2.0
 */
function prima_list_sidebar() {
	global $prima_registered_sidebar_areas;
	if ( !empty( $prima_registered_sidebar_areas ) ) {
		$sidebars = stripslashes_deep( get_option( PRIMA_SIDEBAR_SETTINGS ) );
		$sidebars_opt = array ( '' => __('Default','primathemes') ); 
		foreach ( (array)$sidebars as $id => $info ) {
			if ( $id != '0' ) {
				$sidebars_opt[$id] = $info['name']; 
			}
		}
	}
	return $sidebars_opt;
}

