<?php
/**
 * Functions to handle layouts
 *
 * WARNING: This file is part of the core PrimaThemes framework.
 * DO NOT edit this file under any circumstances. 
 *
 * @category   PrimaThemes
 * @package    Framework
 * @subpackage Functions
 * @author     PrimaThemes
 * @link       http://www.primathemes.com
 */

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

/**
 * Define layouts global variable.
 *
 * @since PrimaThemes 2.0
 */
global $prima_registered_layouts, $prima_default_layout;
$prima_registered_layouts = array();
$prima_default_layout = array();

/**
 * Register new layout.
 *
 * @since PrimaThemes 2.0
 */
function prima_register_layout( $args = array() ) {
	global $prima_registered_layouts;
	if ( !is_array($prima_registered_layouts) )
		$prima_registered_layouts = array();
	$i = count($prima_registered_layouts) + 1;
	$defaults = array(
		'id' => "layout-$i", 
		'class' => '', 
		'label' => '', 
		'description' => '', 
		'sidebar' => '',
		'image' => ''
	);
	$layout = wp_parse_args($args, $defaults);
	$prima_registered_layouts[$layout['id']] = $layout;
	return $layout['id'];
}

/**
 * Return current layout.
 *
 * @since PrimaThemes 2.0
 */
function prima_get_layout() {
	global $prima_layout;
	return $prima_layout;
}

/**
 * Define current layout at get_header hook.
 *
 * @since PrimaThemes 2.0
 */
add_action( 'get_header', 'prima_get_layout_init', 5 );
function prima_get_layout_init() {
	global $wp_query, $prima_default_layout, $prima_registered_layouts, $prima_layout;
	$layout_default = prima_get_setting( 'layout_default' );
	if ( $layout_default && isset($prima_registered_layouts[$layout_default]) ) {
		$prima_layout = $layout_default;
	}
	if ( is_front_page() && get_option('show_on_front') == 'page' && get_option('page_on_front') > 0 ) {
		$layout_inpost = prima_get_post_meta( "_prima_layout", get_option('page_on_front') );
		if ( $layout_inpost && isset($prima_registered_layouts[$layout_inpost]) ) {
			$prima_layout = $layout_inpost;
		}
	}
	elseif ( is_home() && get_option('show_on_front') == 'page' && get_option('page_for_posts') > 0 ) {
		$layout_inpost = prima_get_post_meta( "_prima_layout", get_option('page_for_posts') );
		if ( $layout_inpost && isset($prima_registered_layouts[$layout_inpost]) ) {
			$prima_layout = $layout_inpost;
		}
	}
	elseif ( is_singular() ) {
		$postid = $wp_query->post->ID;
		$posttype = $wp_query->post->post_type;
		$layout_post = prima_get_setting( "layout_{$posttype}" );
		if ( $layout_post && isset($prima_registered_layouts[$layout_post]) ) {
			$prima_layout = $layout_post;
		}
		$layout_inpost = prima_get_post_meta( "_prima_layout", $postid );
		if ( post_type_supports( $posttype, "prima-layout-settings" ) && $layout_inpost && isset($prima_registered_layouts[$layout_inpost]) ) {
			$prima_layout = $layout_inpost;
		}
	}
}

/**
 * Add layout body class
 *
 * @since PrimaThemes 2.0
 */
add_filter( 'body_class', 'prima_layout_body_class' );
function prima_layout_body_class( $classes ) {
	global $prima_registered_layouts;
	$layout = prima_get_layout();
	if ( !empty( $layout ) ) {
		$classes[] = $layout;
		if(isset($prima_registered_layouts[$layout]['class'])) {
			$layout_class = $prima_registered_layouts[$layout]['class'];
			if($layout_class) $classes[] = $layout_class;
		}
	}
	return $classes;
}

/**
 * Return layout list in array format.
 *
 * @since PrimaThemes 2.0
 */
function prima_list_layout( $default = false ) {
	global $prima_registered_layouts, $prima_default_layout;
	$layouts = array();
	if ($prima_registered_layouts) { foreach ( $prima_registered_layouts as $layout ) { 
		$layouts[$layout['id']] = $layout['image'];
	} }
	if ( !empty( $layouts ) && $default )
		$layouts = array_merge( array( '' => $prima_default_layout['image'] ), $layouts );
	return $layouts;
}

/**
 * Add layout chooser metabox when current post type support it.
 *
 * @since PrimaThemes 2.0
 */
add_filter( 'prima_metabox_alltype_content_args', 'prima_metabox_alltype_content_args_layout', null, 2 );
function prima_metabox_alltype_content_args_layout( $meta, $type ) {
	global $prima_registered_layouts, $prima_default_layout;
	if ( !post_type_supports( $type, "prima-layout-settings" ) ) return $meta;
	$layouts = prima_list_layout( true );
	if ( 0 != count( $layouts ) ) {
		$meta['templatelayout'] = array (
			"name" => __("Layout", 'primathemes'),
			"id" => "_prima_layout",
			"desc" => __("Select a specific layout for this section. Overrides default layout setting.", 'primathemes'),
			"type" => "images",
			"options" => $layouts,
			);
	}
	return $meta;
}